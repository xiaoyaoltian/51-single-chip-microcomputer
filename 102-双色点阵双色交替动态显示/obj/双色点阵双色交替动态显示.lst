C51 COMPILER V9.54   ________________________                                              08/26/2018 15:57:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ________________________
OBJECT MODULE PLACED IN .\obj\双色点阵双色交替动态显示.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE 双色点阵双色交替动态显示.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\obj\双色点阵双色交替动态显示.lst) TABS(2) OBJECT(.\obj\双色点阵双色交替动态显示.obj)

line level    source

   1          /*******************************************************************************
   2          * 版  权  : 红梅科技工作室
   3          * 论  坛  ：https://blog.csdn.net/Qingzhusshuiyun
   4          * Q Q     ：2369099714
   5          * 版权所有，盗版必究。
   6          * 工  程   : 双色点阵双色交替动态显示
   7          * 文件名   : 双色点阵双色交替动态显示.c
   8          * 处理器   : STC89C52RC
   9          * 编译环境 : Keil 5
  10          * 系统时钟 : 12MHZ
  11          * 版    本  : V1.0 
  12          * 生成日期  : 2018-08-11              
  13          * 修改日期  :  
  14          * 简单描述 : 使用hc595驱动双色点阵
  15          *******************************************************************************/
  16          
  17          #include<reg52.h>    //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
  18          #include <intrins.h> 
  19          
  20          
  21          unsigned char  segout[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80}; //8列
  22          unsigned char code tab[96]={
  23                                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //空格
  24                                  0x00,0x7E,0xFF,0xC3,0xC3,0xFF,0x7E,0x00, //字符0
  25                                  0x00,0x00,0x43,0xFF,0xFF,0x03,0x00,0x00, //字符1
  26                                  0x00,0x63,0xC7,0xCF,0xDB,0xF3,0x63,0x00, //字符2
  27                                  0x00,0x42,0xDB,0xDB,0xDB,0xFF,0x66,0x00, //字符3
  28                                  0x00,0x3E,0x46,0xFF,0xFF,0x06,0x06,0x00, //字符4
  29                                  0x00,0xF6,0xF7,0xD3,0xD3,0xDF,0xDE,0x00, //字符5
  30                                  0x00,0x7E,0xFF,0xDB,0xDB,0xDF,0x4E,0x00, //字符6
  31                                  0x00,0xC0,0xC0,0xC7,0xFF,0xF8,0xC0,0x00, //字符7
  32                                  0x00,0xFF,0xFF,0xDB,0xDB,0xFF,0xFF,0x00, //字符8
  33                                  0x00,0x72,0xFB,0xDB,0xDB,0xFF,0x7E,0x00, //字符9
  34                                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00   //空格
  35                                  };
  36          /*------------------------------------------------
  37                          硬件端口定义
  38          ------------------------------------------------*/
  39          sbit LATCH = P1^0; 
  40          sbit SRCLK= P1^1;
  41          sbit SER  = P1^2;
  42          
  43          
  44          sbit LATCH_B = P2^2;
  45          sbit SRCLK_B= P2^1;
  46          sbit SER_B= P2^0;
  47          
  48          
  49          /*------------------------------------------------
  50           uS延时函数，含有输入参数 unsigned char t，无返回值
  51           unsigned char 是定义无符号字符变量，其值的范围是
  52           0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
  53           长度如下 T=tx2+5 uS 
  54          ------------------------------------------------*/
C51 COMPILER V9.54   ________________________                                              08/26/2018 15:57:34 PAGE 2   

  55          void DelayUs2x(unsigned char t)
  56          {   
  57   1       while(--t);
  58   1      }
  59          /*------------------------------------------------
  60           mS延时函数，含有输入参数 unsigned char t，无返回值
  61           unsigned char 是定义无符号字符变量，其值的范围是
  62           0~255 这里使用晶振12M，精确延时请使用汇编
  63          ------------------------------------------------*/
  64          void DelayMs(unsigned char t)
  65          {
  66   1           
  67   1       while(t--)
  68   1       {
  69   2           //大致延时1mS
  70   2           DelayUs2x(245);
  71   2         DelayUs2x(245);
  72   2       }
  73   1      }
  74          /*------------------------------------------------
  75                          发送字节程序
  76               带有方向参数，可以选择从高位节写入或者低位写入
  77          ------------------------------------------------*/
  78          void SendByte(unsigned char dat,bit direction)
  79          {    
  80   1        unsigned char i,temp; 
  81   1         if(direction==0)
  82   1           temp=0x80;
  83   1         else
  84   1           temp=0x01;
  85   1      
  86   1         for(i=0;i<8;i++)
  87   1              {
  88   2               SRCLK=0;
  89   2               SER=dat&temp;
  90   2         if(direction==0)
  91   2               dat<<=1;
  92   2         else
  93   2             dat>>=1;
  94   2               SRCLK=1;
  95   2               }
  96   1               
  97   1      }
  98          /*------------------------------------------------
  99                          发送双字节程序
 100          ------------------------------------------------*/
 101          void Send2Byte(unsigned char dat1,unsigned char dat2,bit direction)
 102          {    
 103   1         SendByte(dat1,direction);
 104   1         SendByte(dat2,direction);      
 105   1      }
 106          /*------------------------------------------------
 107                             595锁存程序
 108          ------------------------------------------------*/
 109          void Out595(void)
 110          {
 111   1              LATCH=0;
 112   1              _nop_();
 113   1              LATCH=1;
 114   1      }
 115          
 116          /*------------------------------------------------
C51 COMPILER V9.54   ________________________                                              08/26/2018 15:57:34 PAGE 3   

 117                          发送位码字节程序
 118                         使用另外一片单独595
 119          ------------------------------------------------*/
 120          void SendSeg(unsigned char dat)
 121          {    
 122   1        unsigned char i; 
 123   1              
 124   1         for(i=0;i<8;i++)  //发送字节
 125   1              {
 126   2               SRCLK_B=0;
 127   2               SER_B=dat&0x80;
 128   2               dat<<=1;
 129   2               SRCLK_B=1;
 130   2               }
 131   1            LATCH_B=0;    //锁存
 132   1            _nop_();
 133   1            LATCH_B=1;
 134   1               
 135   1      }
 136          /*------------------------------------------------
 137                             主程序
 138          ------------------------------------------------*/
 139          void main()
 140          {
 141   1      unsigned char i,k,l;
 142   1      while(1)
 143   1      {
 144   2             for(k=0;k<=88;k++)     //所有的字符个数
 145   2               for(l=20;l>0;l--)    //延时长度,改变此值可以改变流动速度
 146   2                  for(i=0;i<=7;i++) //8列显示
 147   2                        {
 148   3                           SendSeg(segout[i]);
 149   3                 Send2Byte(~(*(tab+i+k)),0xff,0);
 150   3                 Out595();
 151   3                           DelayMs(1);
 152   3                 Send2Byte(0xff,0xff,0);//delay(10); //防止重影
 153   3                 Out595();
 154   3                        }
 155   2      
 156   2      
 157   2          for(k=0;k<=88;k++)     //所有的字符个数
 158   2               for(l=20;l>0;l--)    //延时长度,改变此值可以改变流动速度
 159   2                  for(i=0;i<=7;i++) //8列显示
 160   2                        {
 161   3                           SendSeg(segout[7-i]);
 162   3                 Send2Byte(0xff,~(*(tab+i+k)),1); //写入字节方向改变
 163   3                 Out595();
 164   3                           DelayMs(1);
 165   3                 Send2Byte(0xff,0xff,0);//delay(10); //防止重影
 166   3                 Out595();
 167   3                        }
 168   2         }
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    256    ----
   CONSTANT SIZE    =     96    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.54   ________________________                                              08/26/2018 15:57:34 PAGE 4   

   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
