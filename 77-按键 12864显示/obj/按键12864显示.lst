C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ____12864____
OBJECT MODULE PLACED IN .\obj\∞¥º¸12864œ‘ æ.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ∞¥º¸12864œ‘ æ.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\
                    -∞¥º¸12864œ‘ æ.lst) TABS(2) OBJECT(.\obj\∞¥º¸12864œ‘ æ.obj)

line level    source

   1          /*******************************************************************************
   2          * ∞Ê  »®  : ∫Ï√∑ø∆ººπ§◊˜ “
   3          * ¬€  Ã≥  £∫https://blog.csdn.net/Qingzhusshuiyun
   4          * Q Q     £∫2369099714
   5          * ∞Ê»®À˘”–£¨µ¡∞Ê±ÿæø°£
   6          * π§  ≥Ã   : ∞¥º¸12864œ‘ æ
   7          * Œƒº˛√˚   : ∞¥º¸12864œ‘ æ.c
   8          * ¥¶¿Ì∆˜   : STC89C52RC
   9          * ±‡“Îª∑æ≥ : Keil 5
  10          * œµÕ≥ ±÷” : 12MHZ
  11          * ∞Ê    ±æ  : V1.0 
  12          * …˙≥…»’∆⁄  : 2018-07-17              
  13          * –ﬁ∏ƒ»’∆⁄  :  
  14          * ºÚµ•√Ë ˆ : µ•∏ˆ≤Àµ•£¨∂‡“≥œ‘ æ£¨≤ª¥¯◊”≤Àµ•
  15          *******************************************************************************/
  16           
  17          #include <reg52.h>
  18          #include <intrins.h>
  19          #include "delay.h"
  20          
  21          sbit RS = P2^4;
  22          sbit RW = P2^5;
  23          sbit E  = P2^6;
  24          sbit RES = P2^3;
  25          sbit PSB = P2^2;
  26          sbit PAUSE = P3^0;
  27          
  28          #define DataPort P0        //µ•∆¨ª˙ P0<------> “∫æßDB0-DB7
  29          
  30          sbit KEY_ADD=P2^0;         //∂®“Â∞¥º¸ ‰»Î∂Àø⁄
  31          sbit KEY_DEC=P2^1;
  32          
  33          unsigned char curr,currold;//»´æ÷±‰¡ø£¨µ±«∞º˝Õ∑Œª÷√
  34          
  35          unsigned char code user16x16[]={ //º˝Õ∑Õº∆¨
  36          0x00,0x00,0x20,0x00,0x30,0x00,0x38,0x00,0x3C,0x00,0x3E,0x00,0x3F,0x00,0x3F,0x80,
  37          0x3F,0xC0,0x3F,0x80,0x3F,0x00,0x3E,0x00,0x3C,0x00,0x38,0x00,0x30,0x00,0x20,0x00,
  38          
  39          };
  40          unsigned char code *MainMenu[]=
  41          {
  42          {"  ÷«ƒ‹∑Á…»"},
  43          {"  ƒ£ Ω£∫µµŒª∑Á"},
  44          {"  µµŒª£∫"},
  45          {"  Œ¬∂»£∫25"},
  46          {"  2013°¢3°¢29"},
  47          {"  6.…Ë÷√6"},
  48          {"  7.…Ë÷√7"},
  49          {"  8.…Ë÷√8"},
  50          {"  9.…Ë÷√9"},
  51          {"  10.…Ë÷√10"},
  52          };
  53          /*------------------------------------------------
  54                              ºÏ≤‚√¶Œª
C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 2   

  55          ------------------------------------------------*/
  56          void Check_Busy()
  57          {  
  58   1          RS=0;
  59   1          RW=1;
  60   1          E=1;
  61   1          DataPort=0xff;
  62   1          while((DataPort&0x80)==0x80);//√¶‘Úµ»¥˝
  63   1          E=0;
  64   1      }
  65          /*------------------------------------------------
  66                             –¥√¸¡Ó
  67          ------------------------------------------------*/
  68          void Write_Cmd(unsigned char Cmd)
  69          {
  70   1        Check_Busy();
  71   1        RS=0;
  72   1        RW=0;
  73   1        E=1;
  74   1        DataPort=Cmd;
  75   1        DelayUs2x(5);
  76   1        E=0;
  77   1        DelayUs2x(5);
  78   1      }
  79          /*------------------------------------------------
  80                              –¥ ˝æ›
  81          ------------------------------------------------*/
  82          void Write_Data(unsigned char Data)
  83          {
  84   1        Check_Busy();
  85   1        RS=1;
  86   1        RW=0;
  87   1        E=1;
  88   1        DataPort=Data;
  89   1        DelayUs2x(5);
  90   1        E=0;
  91   1        DelayUs2x(5);
  92   1      }
  93          /*------------------------------------------------
  94                             “∫æß∆¡≥ı ºªØ
  95          ------------------------------------------------*/
  96          void Init_ST7920()
  97          {  
  98   1         DelayMs(40);           //¥Û”⁄40MSµƒ—” ±≥Ã–Ú
  99   1         PSB=1;                 //…Ë÷√Œ™8BIT≤¢ø⁄π§◊˜ƒ£ Ω
 100   1         DelayMs(1);            //—” ±
 101   1         RES=0;                 //∏¥Œª
 102   1         DelayMs(1);            //—” ±
 103   1         RES=1;                 //∏¥Œª÷√∏ﬂ
 104   1         DelayMs(10);
 105   1         Write_Cmd(0x30);       //—°‘Òª˘±æ÷∏¡ÓºØ
 106   1         DelayUs2x(50);         //—” ±¥Û”⁄100us
 107   1         Write_Cmd(0x30);       //—°‘Ò8bit ˝æ›¡˜
 108   1         DelayUs2x(20);         //—” ±¥Û”⁄37us
 109   1         Write_Cmd(0x0c);       //ø™œ‘ æ(Œﬁ”Œ±Í°¢≤ª∑¥∞◊)
 110   1         DelayUs2x(50);         //—” ±¥Û”⁄100us
 111   1         Write_Cmd(0x01);       //«Â≥˝œ‘ æ£¨≤¢«“…Ë∂®µÿ÷∑÷∏’ÎŒ™00H
 112   1         DelayMs(15);           //—” ±¥Û”⁄10ms
 113   1         Write_Cmd(0x06);       //÷∏∂®‘⁄◊ ¡œµƒ∂¡»°º∞–¥»Î ±£¨…Ë∂®”Œ±Íµƒ“∆∂Ø∑ΩœÚº∞÷∏∂®œ‘ æµƒ“∆Œª£¨π‚±Í¥””“œÚ◊Ûº”1Œ
             -ª“∆∂Ø
 114   1         DelayUs2x(50);         //—” ±¥Û”⁄100us
 115   1      }
C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 3   

 116          /*------------------------------------------------
 117                             ”√ªß◊‘∂®“Â◊÷∑˚
 118          ------------------------------------------------*/
 119          void CGRAM()
 120          { 
 121   1           int i;
 122   1           Write_Cmd(0x30); 
 123   1           Write_Cmd(0x40);
 124   1           for(i=0;i<16;i++)
 125   1             {
 126   2            Write_Data(user16x16[i*2]);
 127   2              Write_Data(user16x16[i*2+1]);
 128   2            }
 129   1      }   
 130          /*------------------------------------------------
 131                             œ‘ æ”√ªß◊‘∂®“Â◊÷∑˚
 132          ------------------------------------------------*/
 133          void DisplayCGRAM(unsigned char x,unsigned char y)
 134          { 
 135   1       switch(y)
 136   1           {
 137   2          case 1: Write_Cmd(0x80+x);break;
 138   2          case 2: Write_Cmd(0x90+x);break;
 139   2          case 3: Write_Cmd(0x88+x);break;
 140   2          case 4: Write_Cmd(0x98+x);break;
 141   2            default:break;
 142   2         }
 143   1          Write_Data(00);
 144   1          Write_Data(00);
 145   1      
 146   1      }         
 147          /*------------------------------------------------
 148                             œ‘ æ◊÷∑˚¥Æ
 149          x:∫·◊¯±Í÷µ£¨∑∂Œß0~8
 150          y:◊›◊¯±Í÷µ£¨∑∂Œß1~4
 151          ------------------------------------------------*/
 152          void LCD_PutString(unsigned char x,unsigned char y,unsigned char code *s)
 153          { 
 154   1       switch(y)
 155   1           {
 156   2          case 1: Write_Cmd(0x80+x);break;
 157   2          case 2: Write_Cmd(0x90+x);break;
 158   2          case 3: Write_Cmd(0x88+x);break;
 159   2          case 4: Write_Cmd(0x98+x);break;
 160   2            default:break;
 161   2         }
 162   1       while(*s>0)
 163   1         { 
 164   2            Write_Data(*s);
 165   2            s++;
 166   2            DelayUs2x(50);
 167   2         }
 168   1      }
 169          /*------------------------------------------------
 170                                «Â∆¡
 171          ------------------------------------------------*/
 172          void ClrScreen()
 173          { 
 174   1         Write_Cmd(0x01);
 175   1         DelayMs(15);
 176   1      }
 177              
C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 4   

 178          /*------------------------------------------------
 179                             œ‘ æÕº∆¨
 180          ------------------------------------------------*/
 181          void LCD_PutGraphic(unsigned char code *img)
 182          { 
 183   1       int i,j;
 184   1      //œ‘ æ…œ∞Î∆¡ƒ⁄»›…Ë÷√
 185   1         for(i=0;i<32;i++)            
 186   1          { 
 187   2            Write_Cmd(0x80 + i); //SET  ¥π÷±µÿ÷∑ VERTICAL ADD
 188   2            Write_Cmd(0x80);     //SET  ÀÆ∆Ωµÿ÷∑ HORIZONTAL ADD
 189   2            for(j=0;j<16;j++)
 190   2             {
 191   3               Write_Data(*img);
 192   3               img++;
 193   3             }
 194   2          }
 195   1      //œ‘ æœ¬∞Î∆¡ƒ⁄»›…Ë÷√
 196   1         for(i=0;i<32;i++)            
 197   1          {
 198   2            Write_Cmd(0x80 + i); //SET ¥π÷±µÿ÷∑ VERTICAL ADD
 199   2            Write_Cmd(0x88);     //SET ÀÆ∆Ωµÿ÷∑ HORIZONTAL ADD
 200   2            for(j=0;j<16;j++)
 201   2             {
 202   3               Write_Data(*img);
 203   3               img++;
 204   3             }
 205   2          }  
 206   1                 
 207   1      }
 208          /*------------------------------------------------
 209                           …Ë÷√µΩªÊÕºƒ£ Ω
 210          ------------------------------------------------*/
 211          void SetGraphicMode()
 212          { 
 213   1         Write_Cmd(0x36);       //—°‘Ò8bit ˝æ›¡˜ Õº–Œƒ£ Ω
 214   1         DelayUs2x(20);
 215   1      
 216   1      }
 217          /*------------------------------------------------
 218                           µ˜”√œ‘ æ∏¸–¬
 219          ------------------------------------------------*/
 220          void DisplayUpdata(void)
 221          {   
 222   1          unsigned char num;
 223   1        ClrScreen();
 224   1        num=sizeof(MainMenu)/sizeof(MainMenu[0]);//≈–∂œ ˝◊È÷– ˝÷µ∏ˆ ˝
 225   1        if((0+(curr/4)*4)<num)
 226   1            LCD_PutString(0,1,MainMenu[0+(curr/4)*4]);
 227   1        else //»Áπ˚≥¨≥ˆ ˝◊È◊Ó¥Û‘™Àÿ£¨‘Ú–¥ø’–≈œ¢£¨≤ª≈–∂œ¥À–≈œ¢ø…ƒ‹ª·≥ˆœ÷¬“¬Î 
 228   1          LCD_PutString(0,1,"");
 229   1        if((1+(curr/4)*4)<num)
 230   1          LCD_PutString(0,2,MainMenu[1+(curr/4)*4]);
 231   1        else
 232   1          LCD_PutString(0,2,"");
 233   1        if((2+(curr/4)*4)<num)
 234   1          LCD_PutString(0,3,MainMenu[2+(curr/4)*4]);
 235   1        else
 236   1          LCD_PutString(0,3,"");
 237   1        if((3+(curr/4)*4)<num)
 238   1          LCD_PutString(0,4,MainMenu[3+(curr/4)*4]);
 239   1        else
C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 5   

 240   1          LCD_PutString(0,4,"");
 241   1        DisplayCGRAM(0,curr%4+1); 
 242   1      }
 243          /*------------------------------------------------
 244                           ÷˜≥Ã–Ú
 245          ------------------------------------------------*/
 246          main()
 247          {
 248   1      
 249   1        Init_ST7920();   //≥ı ºªØ
 250   1        CGRAM();     //–¥»Î◊‘∂®“Â◊÷∑˚ 
 251   1        DisplayUpdata();
 252   1         while(1)
 253   1         { 
 254   2            
 255   2          
 256   2       if(curr!=currold) //π‚±ÍŒª÷√±‰ªØ£¨‘Ú∏¸–¬œ‘ æ
 257   2        {
 258   3          DisplayUpdata();
 259   3        currold=curr;
 260   3        } 
 261   2        
 262   2       if(!KEY_ADD)  //»Áπ˚ºÏ≤‚µΩµÕµÁ∆Ω£¨Àµ√˜∞¥º¸∞¥œ¬
 263   2          {
 264   3         DelayMs(10); //—” ±»•∂∂£¨“ª∞„10-20ms
 265   3           if(!KEY_ADD)     //‘Ÿ¥Œ»∑»œ∞¥º¸ «∑Ò∞¥œ¬£¨√ª”–∞¥œ¬‘ÚÕÀ≥ˆ
 266   3           {
 267   4              while(!KEY_ADD);//»Áπ˚»∑»œ∞¥œ¬∞¥º¸µ»¥˝∞¥º¸ Õ∑≈£¨√ª”– Õ∑≈‘Ú“ª÷±µ»¥˝
 268   4               {
 269   5             if(curr<sizeof(MainMenu)/sizeof(MainMenu[0])-1)//≈–∂œ ˝◊È÷– ˝÷µ∏ˆ ˝
 270   5               {
 271   6              curr++;
 272   6                    }
 273   5            }
 274   4           }
 275   3        }
 276   2      
 277   2       if(!KEY_DEC)  //»Áπ˚ºÏ≤‚µΩµÕµÁ∆Ω£¨Àµ√˜∞¥º¸∞¥œ¬
 278   2          {
 279   3         DelayMs(10); //—” ±»•∂∂£¨“ª∞„10-20ms
 280   3           if(!KEY_DEC)     //‘Ÿ¥Œ»∑»œ∞¥º¸ «∑Ò∞¥œ¬£¨√ª”–∞¥œ¬‘ÚÕÀ≥ˆ
 281   3           {
 282   4              while(!KEY_DEC);//»Áπ˚»∑»œ∞¥œ¬∞¥º¸µ»¥˝∞¥º¸ Õ∑≈£¨√ª”– Õ∑≈‘Ú“ª÷±µ»¥˝
 283   4               {
 284   5               if(curr>0)
 285   5               {
 286   6              curr--;
 287   6      
 288   6                    }
 289   5             }
 290   4           }
 291   3        }  
 292   2        }
 293   1      }
 294          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    844    ----
   CONSTANT SIZE    =    145    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   ____12864____                                                         08/26/2018 11:27:36 PAGE 6   

   DATA SIZE        =     22      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
